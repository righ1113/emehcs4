((3 *) (1 +)) >3x+1                                        |
(2 /) >x/2                                                 |

(=d =m =x m (x d mod) ==) >modBase                         |
(0 2 modBase) >even?                                       |
(0 3 modBase) >0mod3?                                      |
(0 5 modBase) >0mod5?                                      |

(=out =inp
  ((inp cdr) (out (inp car) cons) reverse0)
    out
      ([] inp ==) ?) >reverse0                             |
([] reverse0) >reverse                                     |

(=out2 >f =inp
  ((inp car) f) >ret
    (inp cdr) =ic
      (out2 ret cons) >oc
        (ic f oc map0) (out2 reverse) ([] inp ==) ?) >map0 |
([] map0) >map                                             |

(=out =x =inp
  (out reverse) =o
    (((inp cdr) (x 1 -) (out (inp car) cons) take0)
      o
        ([] inp ==) ?)
          o
            (x 1 <) ?) >take0                              |
([] take0) >take                                           |

(=out =start =stop =step
  (step stop (start step +) (out start cons) cDiff0)
    (out reverse)
      (stop start <) ?) >cDiff0                            |
([] cDiff0) >cDiff
